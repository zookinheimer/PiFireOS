name: Build Release Image

on:
  workflow_dispatch:            # ← adds the "Run workflow" button
  release:
    types: [ published ]

permissions:
  contents: write               # needed to upload release assets

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Update Dependencies
        run: |
          sudo apt update

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y coreutils p7zip-full qemu-user-static python3-git

      # Needed by CustomPiOS's generate_board_config.py (imports 'git')
      - name: Install Python deps
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install gitpython

      - name: Checkout CustomPiOS
        uses: actions/checkout@v3.3.0
        with:
          repository: 'guysoft/CustomPiOS'
          path: CustomPiOS

      - name: Checkout Project Repository
        uses: actions/checkout@v3.3.0
        with:
          path: repository
          submodules: true

      - name: Download Raspbian Image
        run: |
          cd repository/src/image
          wget -c --trust-server-names 'https://downloads.raspberrypi.org/raspios_lite_armhf_latest'

      - name: Update CustomPiOS Paths
        run: |
          cd repository/src
          ../../CustomPiOS/src/update-custompios-paths

      - name: Build Image
        run: |
          sudo modprobe loop
          cd repository/src
          sudo bash -x ./build_dist

      - name: Copy Output
        id: copy
        run: |
          source repository/src/config
          image=PiFireOS-${{ github.ref_name }}
          cp repository/src/workspace/*.img ${image}.img
          echo "image=${image}" >> $GITHUB_ENV

      - name: Compress the image
        run: zip ${{ env.image }}.zip ${{ env.image }}.img

      - name: Upload to release - ${{ github.ref_name }}
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ env.image }}.zip

      # --- Diagnostics: always keep logs so we know why dpkg failed ---
      - name: Print last lines of build.log on failure
        if: failure()
        run: |
          echo "===== repository/src/build.log (tail) ====="
          tail -n 400 repository/src/build.log || true

      - name: Upload build & chroot logs (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: custompios-logs
          path: |
            repository/src/build.log
            repository/src/workspace/build.log
            repository/src/workspace/chroot/var/log/apt/term.log
            repository/src/workspace/chroot/var/log/dpkg.log
            repository/src/workspace/chroot/var/log/apt/history.log
          if-no-files-found: warn   
