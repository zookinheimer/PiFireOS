name: Build Release Image

on:
  workflow_dispatch:
  release:
    types: [ published ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Update apt
        run: sudo apt-get update

      # CustomPiOS deps (from its docs) + extras that help in CI
      - name: Install system dependencies
        run: |
          sudo apt-get install -y \
            gawk util-linux coreutils p7zip-full git qemu-user-static \
            binfmt-support python3-git

      - name: Checkout CustomPiOS
        uses: actions/checkout@v4
        with:
          repository: guysoft/CustomPiOS
          path: CustomPiOS

      - name: Checkout Project Repository
        uses: actions/checkout@v4
        with:
          path: repository
          submodules: true

      - name: Inject noninteractive apt module & enable it
        run: |
          set -e
          MODDIR=repository/src/modules/apt-noninteractive
          mkdir -p "$MODDIR/filesystem/etc/apt/apt.conf.d" \
                  "$MODDIR/filesystem/etc/dpkg/dpkg.cfg.d"
          cat > "$MODDIR/start_chroot_script" <<'EOF'
          #!/bin/bash
          set -e
          export DEBIAN_FRONTEND=noninteractive
          ln -fs /usr/share/zoneinfo/Etc/UTC /etc/localtime || true
          dpkg-reconfigure -f noninteractive tzdata || true
          EOF
          chmod +x "$MODDIR/start_chroot_script"
          cat > "$MODDIR/filesystem/etc/apt/apt.conf.d/90force-noninteractive" <<'EOF'
          Dpkg::Options { "--force-confdef"; "--force-confold"; };
          APT::Get::Assume-Yes "true";
          APT::Get::fix-broken "true";
          Acquire::Retries "3";
          EOF
          cat > "$MODDIR/filesystem/etc/dpkg/dpkg.cfg.d/90-force-conffiles" <<'EOF'
          force-confdef
          force-confold
          EOF
          # Prepend module so it runs first
          sed -i -E 's/^MODULES=(.*)$/MODULES=apt-noninteractive(\1)/' repository/src/config


      - name: Download Raspberry Pi OS (armhf lite)
        run: |
          cd repository/src/image
          wget -c --trust-server-names 'https://downloads.raspberrypi.org/raspios_lite_armhf_latest'

      - name: Update CustomPiOS paths
        run: |
          cd repository/src
          ../../CustomPiOS/src/update-custompios-paths

      - name: Inject noninteractive + dpkg options (CustomPiOS module)
        run: |
          set -euo pipefail
          MOD="repository/src/modules/00-apt-noninteractive"
          # overlay files that will exist inside the chrooted image
          mkdir -p "$MOD/filesystem/etc/apt/apt.conf.d" \
                  "$MOD/filesystem/etc/dpkg/dpkg.cfg.d" \
                  "$MOD/filesystem/etc/needrestart/conf.d" \
                  "$MOD/filesystem/usr/sbin"

          # Make apt/dpkg auto-answer without prompting (install new conffiles by default)
          cat > "$MOD/filesystem/etc/apt/apt.conf.d/90force-noninteractive" <<'EOF'
          Dpkg::Options { "--force-confdef"; "--force-confnew"; };
          APT::Get::Assume-Yes "true";
          Acquire::Retries "5";
          EOF

          cat > "$MOD/filesystem/etc/dpkg/dpkg.cfg.d/force-conf" <<'EOF'
          force-confdef
          force-confnew
          EOF

          # Donâ€™t pause on needrestart questions
          cat > "$MOD/filesystem/etc/needrestart/conf.d/10-auto.conf" <<'EOF'
          $nrconf{restart} = 'a';
          $nrconf{kernelhints} = 0;
          EOF

          # Block service restarts during chroot package installs (just in case)
          cat > "$MOD/filesystem/usr/sbin/policy-rc.d" <<'EOF'
          #!/bin/sh
          exit 101
          EOF
          chmod +x "$MOD/filesystem/usr/sbin/policy-rc.d"

          # Ensure our module runs first
          if grep -q '^ACTIVATE_MODULES' repository/src/config; then
            sed -i 's/^\(ACTIVATE_MODULES\s*=\s*\)\"\(.*\)\"/\1"00-apt-noninteractive \2"/' repository/src/config
          else
            sed -i 's/^\(MODULES\s*=\s*\)\"\(.*\)\"/\1"00-apt-noninteractive \2"/' repository/src/config
          fi


      - name: Force noninteractive dpkg in chroot (avoid initramfs prompt)
        run: |
          set -e
          # Create a module that runs FIRST
          mkdir -p repository/src/modules/00-apt-noninteractive

          cat > repository/src/modules/00-apt-noninteractive/chroot_script <<'EOF'
          #!/bin/bash
          set -e
          export DEBIAN_FRONTEND=noninteractive

          mkdir -p /etc/apt/apt.conf.d
          cat > /etc/apt/apt.conf.d/90ci-dpkg-conffiles <<CONF
          Dpkg::Options {
            "--force-confdef";
            "--force-confold";
          };
          APT::Get::Assume-Yes "true";
          APT::Get::quiet "true";
          CONF
          EOF
          chmod +x repository/src/modules/00-apt-noninteractive/chroot_script

          # Ensure our module is FIRST in the activation list
          if grep -q '^ACTIVATE_MODULES="' repository/src/config; then
            sed -i 's/^ACTIVATE_MODULES="/ACTIVATE_MODULES="00-apt-noninteractive /' repository/src/config
          else
            printf 'ACTIVATE_MODULES="00-apt-noninteractive $ACTIVATE_MODULES"\n' | cat - repository/src/config > repository/src/config.new
            mv repository/src/config.new repository/src/config
          fi

      - name: Inject apt noninteractive module (keep old conffiles)
        run: |
          set -e
          # Create a tiny module that runs FIRST
          mkdir -p repository/src/modules/apt-noninteractive

          cat > repository/src/modules/apt-noninteractive/chroot_script <<'EOF'
          #!/bin/bash
          set -e
          mkdir -p /etc/apt/apt.conf.d

          # Tell dpkg what to do with changed conffiles: prefer current file, no prompts
          cat >/etc/apt/apt.conf.d/90ci-dpkg-conffiles <<CONF
          Dpkg::Options {
            "--force-confdef";
            "--force-confold";
          };
          APT::Get::Assume-Yes "true";
          APT::Get::quiet "true";
          CONF

          export DEBIAN_FRONTEND=noninteractive
          EOF
          chmod +x repository/src/modules/apt-noninteractive/chroot_script

          # Ensure our module is FIRST in the list so it runs before the base upgrade
          sed -i 's/^ACTIVATE_MODULES="/ACTIVATE_MODULES="apt-noninteractive /' repository/src/config || true

      # (Optional) sanity check that qemu binfmt is registered
      - name: Show qemu binfmt registrations
        run: |
          sudo update-binfmts --display qemu-arm || true
          sudo update-binfmts --display qemu-aarch64 || true

      - name: Build Image
        env:
          # Helps avoid interactive postinsts in chroot (tzdata, etc.)
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo modprobe loop
          cd repository/src
          sudo bash -x ./build_dist

      - name: Copy output image
        if: success()
        id: copy
        run: |
          source repository/src/config
          image=PiFireOS-${{ github.ref_name }}
          cp repository/src/workspace/*.img ${image}.img
          echo "image=${image}" >> $GITHUB_ENV

      - name: Compress image
        if: success()
        run: zip "${{ env.image }}.zip" "${{ env.image }}.img"

      - name: Upload to release - ${{ github.ref_name }}
        if: success() && startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.image }}.zip

      # --- Diagnostics: always keep logs so we know why dpkg failed ---
      - name: Print last lines of build.log on failure
        if: failure()
        run: |
          echo "===== repository/src/build.log (tail) ====="
          tail -n 400 repository/src/build.log || true

      - name: Upload build & chroot logs (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: custompios-logs
          path: |
            repository/src/build.log
            repository/src/workspace/build.log
            repository/src/workspace/chroot/var/log/apt/term.log
            repository/src/workspace/chroot/var/log/dpkg.log
            repository/src/workspace/chroot/var/log/apt/history.log
          if-no-files-found: warn
